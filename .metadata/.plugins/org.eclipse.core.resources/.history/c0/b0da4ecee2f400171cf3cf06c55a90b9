package Assignments.HW1;

public class Percolation {
	private int[][] site;	// all the sites
	private int openNum;	// number of open sites
	
	public Percolation(int n) {                
		// create n-by-n grid, with all sites blocked
		if (n<=0) throw new IllegalArgumentException();
		
		site = new int[n][n];
		for(int i=0; i<n; i++){
			for(int j=0; j<n; j++){
				site[i][j] = 0;	//initialization: all the sites are blocked
			}
		}
		openNum = n*n;
	   }
	
	public void open(int row, int col) {
		   // open site (row, col) if it is not open already
		if((row-1)<0 || (row-1)>=n || (col-1)<0 || (col-1)>=n) 
			throw new IllegalArgumentException();
		else {
			// open the chosen site
			site[row-1][col-1] = 1;
			// then check if there are adjacent open sites
			
			
		}
	   }
	
	public boolean isOpen(int row, int col) {
		   // is site (row, col) open?
		return (site[row-1][col-1] == 1);
	   }
	
	public boolean isFull(int row, int col) {
		   // is site (row, col) full?
		return (site[row-1][col-1] == 0);
	   }
	
	public int numberOfOpenSites() {
		   // number of open sites
		   return openNum;
	   }
	
	public boolean percolates() {
		   // does the system percolate?
	   }
	
	public static void main(String[] args) {
		   // test client (optional)
	   }
}
